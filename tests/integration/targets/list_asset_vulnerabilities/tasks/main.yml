- name: Get all vulns from asset 
  list_asset_vulnerabilities:
    access_key: "{{ tenable_access_key }}"
    secret_key: "{{ tenable_secret_key }}"
    asset_id: "{{ asset_id_with_vulns }}"
  register: asset_info_vulns

- name: Verify that there are vulns of the asset
  ansible.builtin.assert:
    that:
      - asset_info_vulns.api_response.status_code == 200
      - '"total_asset_count" in asset_info_vulns.api_response.data'
      - 'asset_info_vulns.api_response.data.total_vulnerability_count > 0'

- name: Get vulns from asset applying filters
  list_asset_vulnerabilities:
    access_key: "{{ tenable_access_key }}"
    secret_key: "{{ tenable_secret_key }}"
    asset_id: "{{ asset_id_with_vulns }}"
    filters: 
        - type: plugin.attributes.solution
          operator: match
          value: "Update the affected packages"
        - type: plugin.attributes.cvss_base_score
          operator: gte
          value: "5"
        - type: tracking.state
          operator: eq
          value: "Active"
  register: filter_asset_vulns
  
- name: Verify that there are vulns of the asset and returned data match the filters
  ansible.builtin.assert:
    that:
      - filter_asset_vulns.api_response.status_code == 200
      - '"total_asset_count" in filter_asset_vulns.api_response.data'
      - 'filter_asset_vulns.api_response.data.total_vulnerability_count > 0'
      - 'filter_asset_vulns.api_response.data.vulnerabilities is defined'
      - 'filter_asset_vulns.api_response.data.vulnerabilities | length > 0'
      - 'filter_asset_vulns.api_response.data.vulnerabilities[0].cvss_base_score > 5'
      - 'filter_asset_vulns.api_response.data.vulnerabilities[0].vulnerability_state == "Active"'
